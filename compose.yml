---
services:
  mimir:
    image: grafana/mimir:latest
    environment:
      TZ: UTC
    command: [ "-config.file=/etc/mimir-config.yaml" ]
    volumes:
      - ./container-fs/mimir/mimir-config.yaml:/etc/mimir-config.yaml
      - data-mimir:/data/mimir
    ports:
      - "9009/tcp"

  kafka-broker:
    image: quay.io/strimzi/kafka:latest-kafka-3.8.0
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 1g
    command:
      [
        "sh",
        "-c",
        "export CLUSTER_ID=$$(bin/kafka-storage.sh random-uuid) && bin/kafka-storage.sh format -t $$CLUSTER_ID -c config/kraft/server.properties && bin/kafka-server-start.sh config/kraft/server.properties --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS}",
      ]
    environment:
      TZ: UTC
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_HOST://localhost:29092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3 # The number of partitions > the number of Minions per Location, default is 1
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 20000
      KAFKA_LOG_SEGMENT_BYTES: 107374182
      KAFKA_LOG_SEGMENT_DELETE_DELAY_MS: 1000
    ports:
      - "9092:9092/tcp"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      kafka-broker:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 512m
    environment:
      TZ: UTC
      KAFKA_CLUSTERS_0_NAME: onms-kafka-playground
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker:9092
    ports:
      - "8080:8080/tcp"

  database:
    image: postgres:15
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 512m
    environment:
      TZ: UTC
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: VRL7FhR@mGw@djhS2A4
    volumes:
      - data-pg:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 1s
      retries: 10
    ports:
      - "5432:5432/tcp"

  core:
    image: opennms/horizon:33.1.4
    deploy:
      resources:
        limits:
          cpus: 2.0
          memory: 8g
    depends_on:
      database:
        condition: service_healthy
      mimir:
        condition: service_started
      kafka-broker:
        condition: service_started
    environment:
      TZ: UTC
    command: ["-s"]
    volumes:
      - data-core-cfg:/opt/opennms/etc
      - data-core:/opennms-data
      - ./container-fs/core-etc-overlay:/opt/opennms-etc-overlay
      - ./container-fs/core-overlay:/opt/opennms-overlay
    ports:
      - "8101:8101/tcp"
      - "8980:8980/tcp"
      - "162:1162/udp"
      - "514:10514/udp"
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:8980/opennms/login.jsp" ]
      interval: 5s
      timeout: 3s
      retries: 20

  minion:
    image: opennms/minion:33.1.4
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 4g
    environment:
      TZ: UTC
      JAVA_MIN_MEM: 512M
      JAVA_MAX_MEM: 2048M
    command: ["-f"]
    volumes:
      - ./container-fs/minion-etc-overlay:/opt/minion-etc-overlay
    healthcheck:
      test: "/health.sh"
      interval: 5s
      timeout: 4s
      retries: 20
    ports:
      - "8201:8201/tcp"
      - "162:1162/udp"
      - "514:1514/udp"

  grafana:
    image: grafana/grafana:latest
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 256m
    environment:
      TZ: UTC
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: opennms-opennms-app,grafana-piechart-panel,neocat-cal-heatmap-panel,briangann-datatable-panel
      GF_FEATURE_TOGGLES_ENABLE: nestedFolders
    volumes:
      - data-grafana:/var/lib/grafana
      - ./container-fs/grafana/provisioning:/etc/grafana/provisioning/
    ports:
      - "3000:3000/tcp"

volumes:
  data-pg: {}
  data-mimir: {}
  data-core-cfg: {}
  data-core: {}
  data-grafana: {}
